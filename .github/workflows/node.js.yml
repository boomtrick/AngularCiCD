# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 14
        cache: 'npm'
    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "NPM Cache Dir: $(npm config get cache)"
        echo "npm_cache_dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      working-directory: ./my-angular-project
    - name: Cache npm modules
      id: cache-npm-modules
      uses: actions/cache@v3
      env:
        cache-npm-name: cache-npm-modules
      with:
        path: ${{steps.npm-cache-dir.outputs.npm_cache_dir}}
        key: ${{ runner.os}}-build-${{ env.cache-npm-name}}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-$${{ env.cache-npm-name }}-
    - name: Cache node modules
      id: cache-node-modules
      uses: actions/cache@v3
      env:
        cache-node-name: cache-node-modules
      with: 
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-node-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-node-name}}-
          ${{ runner.os }}-build-
          ${{ runner.os}}-
          
    - name: install dependencies
      if: (steps.cache-npm-modules.outputs.cache-hit != 'true') || (steps.cache.cache-node-modules.outputs.cache-hit != 'true')
      run : |
        npm install -g @angular/cli
      working-directory: ./my-angular-project
      
    - name: Build App
      run: |
        npm run build
      working-directory: ./my-angular-project
        
